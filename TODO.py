# 1) НАЗВАНИЕ ТОРГОВОЙ ПАРЫ.
# Пользователь вводит название торговой пары.
# введённые данные автоматически переводим в верхний регистр
# Торговая пара разбивается на 2 валюты из которых состоит.
# все введёнык валютные пары, программа собирает в множество
# и хранит это множество в памяти.
# (с появлением новой торговой пары множество расширяетсся) .
# Также поступаем с валютами, из которых состоят торговые пары
# - все добавляем в множество.

# 2) ДАННЫЕ ПО ВАЛЮТНОЙ ПАРЕ.
# Далее нам нужны данные по валютной паре.
# Если эта пара есть на бирже и мы можем запросить её данные,
# (какие данные конкретно мы определим в момент работы над этой частью кода)
# то выводим пользователю данные в качестве подсказки,
# (например в example.py
# есть result = request.post('https://api.exmo.com/v1.1/ticker').json()
# и мы получаем данные:
# {'avg': '35277.33740897',
#  'buy_price': '34279.26',
#  'high': '36010',
#  'last_trade': '34304.75',
#  'low': '34150',
#  'sell_price': '34292.99',
#  'updated': 1625468860,
#  'vol': '276.00484489',
#  'vol_curr': '9468277.20294619'})
# ЭТО ЖЕ ВРОДЕ СЛОВАРИК И МЫ МОЖЕМ ОБРАТИТЬСЯ К ЗНАЧЕНИЮ ПО КЛЮЧУ...
# если пары нет на бирже, то выводим соообщение что подсказки не будет.
# и идём к запросу ввода информации

# 3) ЗАПРОС ВВОДА ИНФОРМАЦИИ.
# запрашиваем у пользователя необходимые данные.
# (- рыночная цена. (возможно эту позицию можно добавить автоматически,
# если эту имформацию до этого мы выдернули запросом)
# - минимальная цена за которую готовы купить
# - максимальная цена за которую готовы продать
# - шаг с которым нужно расставить сделки)
# это 4 главных параметра, которые вводит пользователь и с которыми сейчас программа умеет вести расчёт.
# Но запрашиваемые данные добавим, на случай когда валютной пары нет на бирже.
# (- минимальновозможный ордер,
# - процент который берёт биржа)
# также можно запросить у пользователя дельту прибыли.
# Это в более позднем функционале, пока будет заглушка на этой переменной
# причём каждый запрос отдельной строкой
# Итог - переменные заполненны данными.

# 4) РАСЧЁТ И ГЕНЕРАЦИЯ. По имеющимся алгоритмам производится расчёт. Алгоритмы селаем красевей,
# возможно этот этап разобъём на подзадачи и функции генерации
# будут обращаться в своих расчётах к небольшим подфункциям

# 5) ВЫВОД ИНФОРМАЦИИ ПОЛЬЗОВАТЕЛЮ. выводим информацию, в подготовленном формате. Придумать форму вывода,
# чтобы у пользователя было максимально выходных данных. в том числе сгенерированные ордера





